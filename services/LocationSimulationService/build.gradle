plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.6'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.cattleDB'
//version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'mysql:mysql-connector-java:8.0.32'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.apache.commons:commons-math3:3.6.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.0'

	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.3'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'




	implementation("com.github.haifengl:smile-core:2.6.0")

	// MapStruct for object mapping
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	implementation 'com.google.guava:guava:31.1-jre'


	// Optional: For Redis connection pooling

	runtimeOnly 'org.postgresql:postgresql'
//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}